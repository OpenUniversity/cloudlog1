'/bootstrap':signature(findall(X,T,Impred,Xs)::'/impred':impred,[X::T,T::'/bootstrap':type,Impred::'/impred':impred,Xs::'/bootstrap':list(T)]).
'/util':behavior(findall(X,T,Impred,Xs)::'/impred':impred,!'should find all Xs of type T that meet Impred', ('/impred':simulate(findall(XPrime,'/bootstrap':number,'/impred':pred('/bootstrap':listMember(XPrime,'/bootstrap':number,[1,2,3])),XsPrime),['/impred':task(findall(XPrime,'/impred':pred('/bootstrap':listMember(XPrime,'/bootstrap':number,[1,2,3]))),[1,2,3],'/bootstrap':list('/bootstrap':number))],'/impred':true),'/util':assertEqual(XsPrime,[1,2,3],'/bootstrap':list('/bootstrap':number)))).
'/bootstrap':signature(findall(X,Impred)::'/impred':task('/bootstrap':list(T)),[X::T,Impred::'/impred':impred]).
'/impred':clause(findall(X,T,Impred,Xs),'/impred':task(findall(X,Impred),Xs,'/bootstrap':list(T))).
'/bootstrap':signature(parallel(G1,G2)::'/impred':impred,[G1::'/impred':impred,G2::'/impred':impred]).
'/bootstrap':projection(parallel(G1,G2)::'/impred':impred,'/bootstrap':horiz(['/bootstrap':vis(G1::'/impred':impred),'/bootstrap':symbol(124),'/bootstrap':vis(G2::'/impred':impred)])).
'/bootstrap':alias(parallel(G1,G2)::'/impred':impred,!'| ').
'/util':behavior(parallel(G1,G2)::'/impred':impred,!'should evaluate both G1 and G2 to agreement', ('/impred':simulate(parallel('/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[1,2,3])),'/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[2,4,6]))),['/impred':task(par(findall('/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[1,2,3])),'/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[1,2,3]))),findall('/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[2,4,6])),'/impred':pred('/bootstrap':listMember(X,'/bootstrap':number,[2,4,6])))),'/Functional':pair(annotation:changeMode(['/impred':pred('/bootstrap':listMember(1,'/bootstrap':number,[1,2,3])),'/impred':pred('/bootstrap':listMember(2,'/bootstrap':number,[1,2,3])),'/impred':pred('/bootstrap':listMember(3,'/bootstrap':number,[1,2,3]))],'/bootstrap':vert),annotation:changeMode(['/impred':pred('/bootstrap':listMember(2,'/bootstrap':number,[2,4,6])),'/impred':pred('/bootstrap':listMember(4,'/bootstrap':number,[2,4,6])),'/impred':pred('/bootstrap':listMember(6,'/bootstrap':number,[2,4,6]))],'/bootstrap':vert)),'/Functional':pairType('/bootstrap':list('/impred':impred),'/bootstrap':list('/impred':impred)))],'/impred':true),'/util':assertEqual(X,2,'/bootstrap':number))).
'/bootstrap':signature(par(Task1,Task2)::'/impred':task('/Functional':pairType(T1,T2)),[Task1::'/impred':task(T1),Task2::'/impred':task(T2)]).
'/bootstrap':projection(par(Task1,Task2)::'/impred':task('/Functional':pairType(T1,T2)),'/bootstrap':horiz(['/bootstrap':vis(Task1::'/impred':task(T1)),'/bootstrap':symbol(124),'/bootstrap':vis(Task2::'/impred':task(T2))])).
'/bootstrap':alias(par(Task1,Task2)::'/impred':task('/Functional':pairType(_,_)),!'| ').
'/impred':clause(parallel(G1,G2),'/impred':conj('/impred':task(par(findall(G1,G1),findall(G2,G2)),'/Functional':pair(Gs1,Gs2),'/Functional':pairType('/bootstrap':list('/impred':impred),'/bootstrap':list('/impred':impred))),'/impred':conj('/impred':pred('/bootstrap':listMember(G1,'/impred':impred,Gs1)),'/impred':pred('/bootstrap':listMember(G2,'/impred':impred,Gs2))))).
