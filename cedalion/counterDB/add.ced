'/bootstrap':sigProj(add(Family,Key,AddExpr,PrevExpr)::counterOp(KT),[Family::'/bootstrap':string,Key::KT,AddExpr::counterExpr,PrevExpr::counterExpr],'/bootstrap':horiz(['/bootstrap':vis(Family::'/bootstrap':string),'/bootstrap':label(! (:)),'/bootstrap':vis(Key::KT),'/bootstrap':label(!'+='),'/bootstrap':vis(AddExpr::counterExpr),'/bootstrap':brackets('/bootstrap':vis(PrevExpr::counterExpr),40,41)])).
'/util':behavior(add(Family,Key,AddExpr,PrevExpr)::counterOp(KeyType),!'should append AddExpr to Family/Key and query its previous value','/impred':simulate('/impred':with('/impred':uuid,!abcd,'/bootstrap':string,counterTrans(!tbl,!row::'/bootstrap':string,'/bootstrap':string,[add(!fam,!key,counterValue(2),X)])),['/impred':task('/nodalion':trans(!tbl,!row,['/nodalion':set(!'_meta',versionID,[versionID(!abcd)]),'/nodalion':append(!fam,!key,counterValue(2)),'/nodalion':get(!fam,!key)]),['/nodalion':value(!fam,!key,[counterValue(1)])],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':string,'/bootstrap':string,counterExpr)))],'/impred':true)).
annotation:shrink((convertOps(annotation:changeMode([add(Family,Key,AddExpr,PrevExpr)|Ops],'/bootstrap':vert),KeyType,annotation:changeMode(['/nodalion':append(Family,Key,AddExpr),'/nodalion':get(Family,Key)|DbOps],'/bootstrap':vert)):-convertOps(Ops,KeyType,DbOps))).
'/util':behavior(add(Family,Key,AddExpr,PrevExpr)::counterOp(KeyType),!'should unify PrevExpr with the previous value', ('/impred':simulate('/impred':with('/impred':uuid,!abcd,'/bootstrap':string,counterTrans(!tbl,!row::'/bootstrap':string,'/bootstrap':string,[add(!fam,!key,counterValue(2),X)])),['/impred':task('/nodalion':trans(!tbl,!row,['/nodalion':set(!'_meta',versionID,[versionID(!abcd)]),'/nodalion':append(!fam,!key,counterValue(2)),'/nodalion':get(!fam,!key)]),['/nodalion':value(!someFam,!someKey,[counterValue(3)]),'/nodalion':value(!fam,!key,[counterValue(1)])],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':string,'/bootstrap':string,counterExpr)))],'/impred':true),builtin:equals(X::counterExpr,counterValue(1)::counterExpr))).
annotation:shrink((matchResults([add(Family,Key,_,Expr)|Ops],KeyType,RowType,Result):-'/bootstrap':listMember('/nodalion':value(Family,Key,[Expr]),'/nodalion':databaseValue(RowType,KeyType,counterExpr),Result))).
'/util':behavior(add(Family,Key,AddExpr,PrevExpr)::counterOp(KeyType),!'should handle zero-length results', ('/impred':simulate('/impred':with('/impred':uuid,!abcd,'/bootstrap':string,counterTrans(!tbl,!row::'/bootstrap':string,'/bootstrap':string,[add(!fam,!key,counterValue(2),X)])),['/impred':task('/nodalion':trans(!tbl,!row,['/nodalion':set(!'_meta',versionID,[versionID(!abcd)]),'/nodalion':append(!fam,!key,counterValue(2)),'/nodalion':get(!fam,!key)]),['/nodalion':value(!fam,!key,[])],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':string,'/bootstrap':string,counterExpr)))],'/impred':true),builtin:equals(X::counterExpr,counterValue(0)::counterExpr))).
