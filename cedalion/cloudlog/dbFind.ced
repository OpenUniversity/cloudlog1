'/bootstrap':signature(dbFind(Axiom,ValElems)::'/impred':impred,[Axiom::axiom,ValElems::'/bootstrap':list(counterValue)]).
'/util':behavior(dbFind(Axiom,ValElems)::'/impred':impred,!'should find clauses in the clauses column family of the row associated with the predicate name and its first argument', (builtin:rawTermToString(clause(example:somePred([1],2),true)::axiom,AxiomStr),builtin:rawTermToString(baseVal(4)::counterValue,BV),'/impred':simulate(dbFind(clause(example:somePred([1],Y),Goal),Val),['/impred':task('/nodalion':trans(!axioms,!'example#somePred:\'.\'(1,[])',['/nodalion':getAll(!clauses)]),['/nodalion':value(!clauses,AxiomStr,[BV])],'/bootstrap':list('/nodalion':databaseValue))],'/impred':true),builtin:equals(Y::'/bootstrap':number,2::'/bootstrap':number),builtin:equals(Goal::pred,true::pred),builtin:equals(Val::'/bootstrap':list(counterValue),[baseVal(4)]::'/bootstrap':list(counterValue)))).
'/impred':clause(dbFind(Axiom,Val),'/impred':conj('/impred':pred((axiomFamily(Axiom,Family,Core),rowForTerm(Core,Row))),axiomInRow(Row,Family,Axiom,Val))).
'/bootstrap':signature(axiomFamily(Axiom,Family,CoreTTerm)::'/bootstrap':pred,[Axiom::axiom,Family::'/bootstrap':string,CoreTTerm::'/bootstrap':typedTerm]).
'/util':behavior(axiomFamily(Axiom,Family,Key)::'/bootstrap':pred,!'should identify clauses properly', (axiomFamily(clause(H,B),Family,Key),builtin:equals(Family::'/bootstrap':string,!clauses::'/bootstrap':string),builtin:equals(Key,H::pred))).
'/util':behavior(axiomFamily(Axiom,Family,Key)::'/bootstrap':pred,!'should identify facts properly', (axiomFamily(example:someFact(1,2),Family,Key),builtin:equals(Family::'/bootstrap':string,!facts::'/bootstrap':string),builtin:equals(Key,example:someFact(1,2)::axiom))).
'/bootstrap':signature(rule(Fact,Guard,Axiom)::axiom,[Fact::axiom,Guard::'/bootstrap':pred,Axiom::axiom]).
'/util':behavior(axiomFamily(Axiom,Family,Key)::'/bootstrap':pred,!'should identify rules properly', (axiomFamily(rule(example:someFact(X,Y),builtin:true,example:someFact(Y,X)),Family,Key),builtin:equals(Family::'/bootstrap':string,!rules::'/bootstrap':string),builtin:equals(Key,example:someFact(X,Y)::axiom))).
annotation:shrink((axiomFamily(Axiom,Family,Key):-builtin:if(Axiom::axiom=clause(H,_)::axiom, (Family::'/bootstrap':string=!clauses::'/bootstrap':string,Key=H::pred),builtin:if(Axiom::axiom=rule(Fact,_,_)::axiom, (Family::'/bootstrap':string=!rules::'/bootstrap':string,Key=Fact::axiom), (Family::'/bootstrap':string=!facts::'/bootstrap':string,Key=Axiom::axiom))))).
