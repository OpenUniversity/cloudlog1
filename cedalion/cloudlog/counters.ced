'/bootstrap':signature(counterValue(Table,Column,Row,Session)::'/impred':expr('/bootstrap':number),[Table::'/bootstrap':string,Column::'/bootstrap':string,Row::'/bootstrap':string,Session::'/bootstrap':string]).
'/deploy':behavior(counterValue(Table,Column,Row,Session)::'/impred':expr('/bootstrap':number),!'should evaluate to 0 if Column does not exist in Table/Row','/impred':simulate('/impred':eval(counterValue(!'tbl1',!'row1',!colX,!sessionY),'/bootstrap':number,0),['/impred':task('/nodalion':trans(!'tbl1',!colX,['/nodalion':get(!'row1')]),['/nodalion':value(!'row1',[])],'/bootstrap':list('/nodalion':databaseValue))],'/impred':true)).
'/deploy':behavior(counterValue(Table,Column,Row,Session)::'/impred':expr('/bootstrap':number),!'should return the base value if no other value exists','/impred':simulate('/impred':eval(counterValue(!'tbl1',!'row1',!colX,!sessionY),'/bootstrap':number,4),['/impred':task('/nodalion':trans(!'tbl1',!colX,['/nodalion':get(!'row1')]),['/nodalion':value(!'row1',[!'\'/cloudlog#baseVal\'(4)'])],'/bootstrap':list('/nodalion':databaseValue))],'/impred':true)).
'/bootstrap':sandbox('/impred':simulate('/impred':eval(counterValue(!'tbl1',!'row1',!colX,!sessionY),'/bootstrap':number,5),['/impred':task('/nodalion':trans(!'tbl1',!colX,['/nodalion':get(!'row1')]),['/nodalion':value(!colX,[!'\'/cloudlog#baseVal\'(4)',!'\'/cloudlog#inc\'(1,!sessionY,[],1000)'])],'/bootstrap':list('/nodalion':databaseValue))],'/impred':true)::'/bootstrap':pred).
'/bootstrap':defAtom(counterValue::'/bootstrap':type).
'/bootstrap':signature(baseVal(X)::counterValue,[X::'/bootstrap':number]).
annotation:shrink('/impred':defFunc(counterValue(Table,Column,Row,Session),'/bootstrap':number,annotation:shrink('/impred':where('/impred':funcIf('/impred':pred((Values::'/bootstrap':list('/bootstrap':string)=[TermString]::'/bootstrap':list('/bootstrap':string),builtin:rawTermToString(baseVal(X)::counterValue,TermString))),'/impred':pureExpr('/Functional':const(X)),'/impred':pureExpr('/Functional':const(0))),'/impred':conj('/impred':task('/nodalion':trans(Table,Row,['/nodalion':get(Column)]),RetVal,'/bootstrap':list('/nodalion':databaseValue)),'/impred':pred(RetVal::'/bootstrap':list('/nodalion':databaseValue)=['/nodalion':value(Column,Values)]::'/bootstrap':list('/nodalion':databaseValue))))))).
'/deploy':behavior(counterValue(Table,Column,Row,Session)::'/impred':expr('/bootstrap':number),!'should return the sum of the base value and an incrementation if the incrementation was made on Session','/impred':simulate('/impred':eval(counterValue(!'tbl1',!'row1',!colX,!sessionY),'/bootstrap':number,5),['/impred':task('/nodalion':trans(!'tbl1',!colX,['/nodalion':get(!'row1')]),['/nodalion':value(!colX,[!'\'/cloudlog#baseVal\'(4)',!'\'/cloudlog#inc\'(1,!sessionY,[],1000)'])],'/bootstrap':list('/nodalion':databaseValue))],'/impred':true)).
