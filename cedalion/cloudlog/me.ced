'/bootstrap':signature(me(Me)::'/impred':impred,[Me::'/bootstrap':string]).
'/bootstrap':projection(me(Me)::'/impred':impred,'/bootstrap':horiz(['/bootstrap':label(!'I am'),'/bootstrap':vis(Me::'/bootstrap':string)])).
'/deploy':behavior(me(Me)::'/impred':impred,!'should always succeed, unifying Me with a string', ('/impred':simulate(me(Me),['/impred':task('/impred':localGet(!me),_,'/impred':localStoreVal),'/impred':task('/impred':uuid,!abcd,'/bootstrap':string),'/impred':task('/impred':localSet(!me,'/impred':localStr(!abcd)),_,'/impred':localStoreVal)],'/impred':true),builtin:string(Me::'/bootstrap':string))).
'/bootstrap':defAtom(noValue::'/impred':localStoreVal).
'/impred':clause(me(Me),'/impred':if('/impred':eval('/impred':localGet(!me,noValue),'/impred':localStoreVal,'/impred':localStr(Me)),'/impred':true,'/impred':conj('/impred':task('/impred':uuid,Me,'/bootstrap':string),'/impred':task('/impred':localSet(!me,'/impred':localStr(Me)),_,'/impred':localStoreVal)))).
'/deploy':behavior(me(Me)::'/impred':impred,!'should always return the same value for the same system', ('/impred':simulate('/impred':conj(me(Me1),me(Me2)),['/impred':task('/impred':localGet(!me),_,'/impred':localStoreVal),'/impred':task('/impred':uuid,!abcd,'/bootstrap':string),'/impred':task('/impred':localSet(!me,'/impred':localStr(!abcd)),_,'/impred':localStoreVal),'/impred':task('/impred':localGet(!me),'/impred':localStr(!abcd),'/impred':localStoreVal)],'/impred':true),builtin:equals(Me1::'/bootstrap':string,Me2::'/bootstrap':string))).
