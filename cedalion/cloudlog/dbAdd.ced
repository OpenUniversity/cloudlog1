'/bootstrap':signature(dbAdd(Axiom,Value)::'/impred':impred,[Axiom::axiom,Value::'/bootstrap':number]).
'/util':behavior(dbAdd(Axiom,Value)::'/impred':impred,!'should add Value to a counter corresponding with the axiom', ('/impred':simulate(dbAdd(example:someFact(1,2),7),['/impred':task('/nodalion':trans(Table,1,['/nodalion':addToCounter(!facts,Fact,Value)]),_,'/bootstrap':list('/nodalion':databaseValue('/bootstrap':number,axiom,_)))],'/impred':true),'/util':assertEqual(Fact,example:someFact(1,2),axiom),'/util':assertEqual(Value,7,'/bootstrap':number),'/util':assertEqual(Table,!'example#someFact','/bootstrap':string))).
'/impred':clause(dbAdd(Axiom,Value),'/impred':conj('/impred':pred((tableName(Axiom,Table),axiomFamily(Axiom,Family,Key::T))),'/impred':task('/nodalion':trans(Table,Key,['/nodalion':addToCounter(Family,Axiom,Value)]),_,'/bootstrap':list('/nodalion':databaseValue(T,axiom,_))))).
'/bootstrap':signature(tableName(Axiom,Table)::'/bootstrap':pred,[Axiom::axiom,Table::'/bootstrap':string]).
'/util':behavior(tableName(Axiom,Name)::'/bootstrap':pred,!'should provide the triggerring fact\'s name for rules', (tableName(rule(example:someFact(1,X),builtin:true,example:someFact(3,X)),Name),'/util':assertEqual(Name,!'example#someFact','/bootstrap':string))).
tableName(Axiom,Table):-builtin:if(Axiom::axiom=rule(Fact,_,_)::axiom,tableName(Fact,Table),builtin:parseTerm(Axiom::axiom,Table,_)).
