'/bootstrap':signature(dbAdd(Axiom,Value,Trans)::'/impred':impred,[Axiom::axiom,Value::'/bootstrap':number,Trans::tranaction]).
'/util':behavior(dbAdd(Axiom,Value,Trans)::'/impred':impred,!'should append an inc entry in the clauses family for a clause axiom','/impred':simulate(dbAdd(clause(example:somePred([1],2),true),1,trans(!sess,[vcEntry(!myID,3)],1234)),['/impred':task('/nodalion':trans(!axioms,!'example#somePred:\'.\'(1,[])',['/nodalion':append(!clauses,!'\'/cloudlog#clause\'(\'example#somePred\'(\'.\'(1,[]),2),\'/cloudlog#true\')',!'\'/cloudlog#inc\'(1,!(sess),\'.\'(\'/cloudlog#vcEntry\'(!(myID),3),[]),1234)')]),_,'/bootstrap':list('/nodalion':databaseValue))],'/impred':true)).
annotation:shrink('/impred':clause(dbAdd(Axiom,V,Trans),'/impred':conj('/impred':pred(dbOpForAdd(Axiom,V,Trans,Row,Op)),'/impred':task('/nodalion':trans(!axioms,Row,[Op]),_,'/bootstrap':list('/nodalion':databaseValue))))).
'/bootstrap':sigProj(dbOpForAdd(Axiom,V,Trans,Row,Op)::'/bootstrap':pred,[Axiom::axiom,V::'/bootstrap':number,Trans::tranaction,Row::'/bootstrap':string,Op::'/nodalion':databaseOp],'/bootstrap':horiz(['/bootstrap':label(!adding),'/bootstrap':vis(V::'/bootstrap':number),'/bootstrap':label(!'to axiom'),'/bootstrap':vis(Axiom::axiom),'/bootstrap':label(!within),'/bootstrap':vis(Trans::tranaction),'/bootstrap':label(!'is done using'),'/bootstrap':vis(Op::'/nodalion':databaseOp),'/bootstrap':label(!'in row'),'/bootstrap':vis(Row::'/bootstrap':string)])).
annotation:shrink((dbOpForAdd(Axiom,V,trans(Session,VC,TS),Row,'/nodalion':append(Family,AxiomStr,IncStr)):-axiomFamily(Axiom,Family,Core),rowForTerm(Core,Row),builtin:rawTermToString(Axiom::axiom,AxiomStr),builtin:rawTermToString(inc(V,Session,VC,TS)::counterValue,IncStr))).
