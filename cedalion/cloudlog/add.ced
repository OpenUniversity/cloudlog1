'/bootstrap':signature(add(Axiom,Value)::'/impred':impred,[Axiom::axiom,Value::'/bootstrap':number]).
'/util':behavior(add(Axiom,Value)::'/impred':impred,!'should add the axiom to the database','/impred':simulate(add(example:someFact(1,2),1),['/impred':task('/nodalion':trans(!'example#someFact',1,['/nodalion':addToCounter(!facts,example:someFact(1,2),1),'/nodalion':getAllCounters(!rules)]),[],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':number,axiom,_)))],'/impred':true)).
'/impred':clause(add(Axiom,Value),'/impred':conj(dbAdd(Axiom,Value,Matches),'/impred':conj('/impred':pred(match(Axiom,Match,MatchFamily)),addMatches(Matches,MatchFamily,Match,Axiom,Value)))).
'/util':behavior(add(Axiom,Value)::'/impred':impred,!'should apply rules to matching facts','/impred':simulate(add(example:someFact(1,2),1),['/impred':task('/nodalion':trans(!'example#someFact',1,['/nodalion':addToCounter(!facts,example:someFact(1,2),1),'/nodalion':getAllCounters(!rules)]),annotation:changeMode(['/nodalion':counterValue(!rules,rule(example:someFact(2,X1),builtin:true,example:someFact(4,X1)),1),'/nodalion':counterValue(!rules,rule(example:someFact(1,X2),builtin:true,example:someFact(3,X2)),1)],'/bootstrap':vert),'/bootstrap':list('/nodalion':databaseValue('/bootstrap':number,axiom,_))),'/impred':task('/nodalion':trans(!'example#someFact',3,['/nodalion':addToCounter(!facts,example:someFact(3,2),1),'/nodalion':getAllCounters(!rules)]),[],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':number,axiom,_)))],'/impred':true)).
'/bootstrap':signature(addMatches(Matches,MatchFamily,Match,Axiom,Value)::'/impred':impred,[Matches::'/bootstrap':list('/nodalion':databaseValue(_,axiom,_)),MatchFamily::'/bootstrap':string,Match::axiom,Axiom::axiom,Value::'/bootstrap':number]).
'/util':behavior(addMatches(Matches,MatchFamily,Match,Axiom,Value)::'/impred':impred,!'should add all matches in the DB results','/impred':simulate(addMatches(annotation:changeMode(['/nodalion':counterValue(!rules,rule(example:someFact(2,X1),builtin:true,example:someFact(4,X1)),1),'/nodalion':counterValue(!rules,rule(example:someFact(1,X2),builtin:true,example:someFact(3,X2)),1)],'/bootstrap':vert),!rules,rule(example:someFact(1,_),_,_),example:someFact(1,2),2),['/impred':task('/nodalion':trans(!'example#someFact',3,['/nodalion':addToCounter(!facts,example:someFact(3,2),2),'/nodalion':getAllCounters(!rules)]),[],'/bootstrap':list('/nodalion':databaseValue('/bootstrap':number,axiom,_)))],'/impred':true)).
'/impred':clause(addMatches([],_,_,_,_),'/impred':true).
annotation:shrink('/impred':clause(addMatches([First|Matches],MatchFamily,Match,Axiom,Value),'/impred':conj('/impred':if('/impred':pred(First::'/nodalion':databaseValue(_,axiom,_)='/nodalion':counterValue(MatchFamily,Match,_)::'/nodalion':databaseValue(_,axiom,_)),'/impred':conj('/impred':pred(applyMatch(Match,Axiom,AxiomPrime)),add(AxiomPrime,Value)),'/impred':true),addMatches(Matches,MatchFamily,Match,Axiom,Value)))).
