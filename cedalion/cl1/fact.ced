parseCloudlog(!f,Str,CtxIn,Axiom::'/cloudlog':axiom,Ctx):-'/parsing':lexParseString('/cloudlog':axiom(Axiom,CtxIn,Ctx),Str,'/cloudlog':cloudlog).
'/nodalion':serve('cl1','/nodalion':post,!'/f/:hash',['/nodalion':jsonBody,'/nodalion':with('/nodalion':jsonObj(['/nodalion':field(!params,Params),'/nodalion':field(!body,'/nodalion':jsonList(Body))]),'/impred':conj('/impred':pred('/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Params),!hash)),'/bootstrap':string,Hash)),'/impred':conj('/impred':task('/impred':'base64Decode'(Hash),Pattern,'/bootstrap':string),'/impred':conj(transForPatternAndBody(Body,Pattern,Trans),'/cloudlog':trans(Trans)))),['/nodalion':outputJson('/nodalion':jsonObj(['/nodalion':field(!status,'/nodalion':jsonStr(!'OK'))]))])]).
'/bootstrap':signature(transForPatternAndBody(Body,Pattern,Trans)::'/impred':impred,[Body::'/bootstrap':list('/nodalion':json),Pattern::'/bootstrap':string,Trans::'/bootstrap':list('/cloudlog':addition)]).
'/impred':clause(transForPatternAndBody([],_,[]),'/impred':true).
annotation:shrink('/impred':clause(transForPatternAndBody(['/nodalion':jsonObj(Fields)|Rest],Pattern,['/cloudlog':addition(Axiom,Value)|Trans]),'/impred':conj('/impred':pred('/Functional':eval('/nodalion':asNumber('/nodalion':jsonMember('/Functional':const('/nodalion':jsonObj(Fields)),!'_count')),'/bootstrap':number,Value)),'/impred':conj(fieldsToContext(Fields,Ctx),'/impred':conj('/impred':pred(parseCloudlog(!f,Pattern,Ctx,Axiom::'/cloudlog':axiom,_)),transForPatternAndBody(Rest,Pattern,Trans)))))).
'/bootstrap':signature(fieldsToContext(Fields,Ctx)::'/impred':impred,[Fields::'/bootstrap':list('/nodalion':jsonField),Ctx::'/bootstrap':list('/cloudlog':ctxElem)]).
'/impred':clause(fieldsToContext([],[]),'/impred':true).
annotation:shrink('/impred':clause(fieldsToContext(['/nodalion':field(Name,'/nodalion':jsonNum(Num))|Fields],['/cloudlog':varName(Num::'/bootstrap':number,Name)|Ctx]),fieldsToContext(Fields,Ctx))).
annotation:shrink('/impred':clause(fieldsToContext(['/nodalion':field(Name,'/nodalion':jsonStr(Str))|Fields],['/cloudlog':varName(Str::'/bootstrap':string,Name)|Ctx]),fieldsToContext(Fields,Ctx))).
