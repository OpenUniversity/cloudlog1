'/bootstrap':defAtom('cl1'::'/nodalion':app).
'/bootstrap':signature(staticContent(Path,Hash,ContentType)::'/cloudlog':axiom,[Path::'/bootstrap':list('/bootstrap':string),Hash::'/bootstrap':string,ContentType::'/bootstrap':string]).
'/nodalion':serve('cl1','/nodalion':put,!'/static/:path',['/nodalion':ipfsBody,'/nodalion':with('/nodalion':jsonObj(['/nodalion':field(!body,'/nodalion':jsonStr(Hash)),'/nodalion':field(!params,Params),'/nodalion':field(!headers,Headers)]),'/impred':conj('/impred':pred(('/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Params),!path)),'/bootstrap':string,Path),'/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Headers),!host)),'/bootstrap':string,Domain),'/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Headers),!'content-type')),'/bootstrap':string,ContentType))),'/impred':conj('/nodalion':findall('/cloudlog':addition(staticContent([Domain,Path],HashPrime,ContentTypePrime),MinusV),'/cloudlog':addition,'/impred':conj('/cloudlog':logicQuery(isStaticContent([Domain,Path],HashPrime,ContentTypePrime),V),'/impred':pred('/Functional':eval('/Functional':applyBinOp('/Functional':const(0),'/Functional':minus,'/Functional':const(V)),'/bootstrap':number,MinusV))),Removals),'/cloudlog':trans(['/cloudlog':addition(staticContent([Domain,Path],Hash,ContentType),1)|Removals]))),['/nodalion':outputJson('/nodalion':jsonObj(['/nodalion':field(!status,'/nodalion':jsonStr(!'OK'))]))])]).
'/bootstrap':signature(isStaticContent(Path,Hash,ContentType)::'/cloudlog':pred,[Path::'/bootstrap':list('/bootstrap':string),Hash::'/bootstrap':string,ContentType::'/bootstrap':string]).
'/cloudlog':genericRule('/cloudlog':rule(staticContent(Path,Hash,ContentType),builtin:true,'/cloudlog':clause(isStaticContent(Path,Hash,ContentType),'/cloudlog':true))).
'/nodalion':serve('cl1','/nodalion':get,!'/static/:path',['/nodalion':with('/nodalion':jsonObj(['/nodalion':field(!params,Params),'/nodalion':field(!headers,Headers)]),'/impred':conj('/impred':pred(('/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Params),!path)),'/bootstrap':string,Path),'/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Headers),!host)),'/bootstrap':string,Domain))),'/cloudlog':logicQuery(isStaticContent([Domain,Path],Hash,ContentType),_)),['/nodalion':header(!'content-type',ContentType),'/nodalion':ipfsGet(Hash)])]).
'/cloudlog':genericRule('/cloudlog':rule(staticContent(_,Hash,!'application/cedalion'),'/cloudlog':axiomForHash(Hash,Axiom),Axiom)).
