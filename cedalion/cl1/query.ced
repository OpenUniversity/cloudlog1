'/nodalion':serve('cl1','/nodalion':get,!'/q/:hash',['/nodalion':with('/nodalion':jsonObj(['/nodalion':field(!params,Params),'/nodalion':field(!query,'/nodalion':jsonObj(QueryArgs)),'/nodalion':field(!hostname,'/nodalion':jsonStr(Domain))]),'/impred':conj('/impred':pred(('/Functional':eval('/nodalion':asString('/nodalion':jsonMember('/Functional':const(Params),!hash)),'/bootstrap':string,Hash),initialContext(QueryArgs,CtxIn))),'/impred':conj('/impred':task('/impred':'base64Decode'(Hash),QueryStr,'/bootstrap':string),'/impred':conj('/impred':pred((parseCloudlog(!q,QueryStr,['/cloudlog':package(Domain)|CtxIn],Goal::'/cloudlog':pred,Ctx),contextToQueryResult(Ctx,ResultFields))),'/nodalion':findall('/nodalion':jsonObj(['/nodalion':field(!'_count','/nodalion':jsonNum(Count))|ResultFields]),'/nodalion':json,'/cloudlog':logicQuery(Goal,Count),Results)))),['/nodalion':outputJson('/nodalion':jsonList(Results))])]).
'/bootstrap':signature(contextToQueryResult(Ctx,ResultFields)::'/bootstrap':pred,[Ctx::'/bootstrap':list('/cloudlog':ctxElem),ResultFields::'/bootstrap':list('/nodalion':jsonField)]).
contextToQueryResult([],[]):-builtin:true.
annotation:shrink((contextToQueryResult([First|Rest],ResultFields):-builtin:if(First::'/cloudlog':ctxElem='/cloudlog':varName(Var::Type,Name)::'/cloudlog':ctxElem,ResultFields::'/bootstrap':list('/nodalion':jsonField)=['/nodalion':field(Name,'/nodalion':jsonTypedTerm(Var,Type))|ResultFieldsPrime]::'/bootstrap':list('/nodalion':jsonField),ResultFields::'/bootstrap':list('/nodalion':jsonField)=ResultFieldsPrime::'/bootstrap':list('/nodalion':jsonField)),contextToQueryResult(Rest,ResultFieldsPrime))).
'/bootstrap':signature(initialContext(QueryArgs,CtxIn)::'/bootstrap':pred,[QueryArgs::'/bootstrap':list('/nodalion':jsonField),CtxIn::'/bootstrap':list('/cloudlog':ctxElem)]).
initialContext([],[]):-builtin:true.
annotation:shrink((initialContext(['/nodalion':field(Name,'/nodalion':jsonStr(Value))|QueryArgs],Ctx):-builtin:if(builtin:strcat(!'import-',LocalName,Name),Ctx::'/bootstrap':list('/cloudlog':ctxElem)=['/cloudlog':import(LocalName,Value)|CtxPrime]::'/bootstrap':list('/cloudlog':ctxElem),builtin:if(builtin:strcat(!'str-',VarName,Name),Ctx::'/bootstrap':list('/cloudlog':ctxElem)=['/cloudlog':varName(Value::'/bootstrap':string,VarName)|CtxPrime]::'/bootstrap':list('/cloudlog':ctxElem),builtin:if(builtin:strcat(!'num-',VarName,Name), ('/Functional':eval('/nodalion':'str2num'('/Functional':const(Value)),'/bootstrap':number,NumValue),Ctx::'/bootstrap':list('/cloudlog':ctxElem)=['/cloudlog':varName(NumValue::'/bootstrap':number,VarName)|CtxPrime]::'/bootstrap':list('/cloudlog':ctxElem)),Ctx::'/bootstrap':list('/cloudlog':ctxElem)=CtxPrime::'/bootstrap':list('/cloudlog':ctxElem)))),initialContext(QueryArgs,CtxPrime))).
'/bootstrap':signature(assign(X,T,Y)::'/bootstrap':pred,[X::T,T::'/bootstrap':type,Y::T]).
assign(X,T,X):-builtin:true.
